https://programmers.co.kr/learn/courses/30/lessons/12952

import Foundation


func solution(_ n:Int) -> Int {
    
    var arr: [Int] = Array(repeating: 0, count: n)
    var result = 0
    
    for i in 0 ..< n {
        arr[0] = i
        result += queen(arr: &arr, row: 1, max: n)
    }

    return result
}

func check(row: Int, arr: [Int]) -> Bool {
    for i in 0..<row {
        if abs(arr[i] - arr[row]) == abs(i-row) {
            return false
        }
    }
    return true
}
    
func queen(arr: inout [Int], row: Int, max: Int) -> Int {
    if row == max {
        return 1
    }

    var cnt = 0
    for i in 0 ..< max {

        if !arr[0..<row].contains(i) {
            arr[row] = i
            if check(row: row, arr: arr) {
                cnt += queen(arr: &arr, row: row + 1, max: max)
            }
        }
    }

    return cnt
}
